"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.publish = exports.subscribe = undefined;

var _rootz = require("rootz");

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var componentStateHandler = void 0;

var setImmutableObject = function setImmutableObject(state, obj) {
  return Object.assign({}, state, obj);
};

/*
* this function has been extracted from ReactJS, <component.prototype.setState> function.
*/
var getEnqueueStateHandler = function getEnqueueStateHandler(scope) {
  var enqueueStateHandler = function (partialState, callback) {
    this.updater.enqueueSetState(this, partialState, callback, "setState");
  }.bind(scope);
  return enqueueStateHandler;
};

var setStateHandler = function setStateHandler(branch, scope, state) {
  branch = "$" + branch;
  scope.state = { __rootzStateHandlerVariable: 0 };
  componentStateHandler = setImmutableObject(componentStateHandler, _defineProperty({}, branch, {
    state: scope.state,
    stateHandler: getEnqueueStateHandler(scope)
  }));
  _rootz.appState.set(branch, state);
};

var executeHandler = function executeHandler(branch) {
  var requestedBranch = componentStateHandler[branch];
  var rootzStateHandlerVariable = requestedBranch.state.__rootzStateHandlerVariable;
  requestedBranch.stateHandler({ __rootzStateHandlerVariable: rootzStateHandlerVariable + 1 });
};

/*
* Intrinsic Functions - End
*/
var subscribe = function subscribe(_ref) {
  var name = _ref.name,
      scope = _ref.scope,
      state = _ref.state;

  setStateHandler(name, scope, state);
};

var publish = function publish(name) {
  executeHandler(name);
};

exports.subscribe = subscribe;
exports.publish = publish;